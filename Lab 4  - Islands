#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void dfs(char** grid, int i, int j, int rows, int cols)
 {
    if (i < 0 || i >= rows || j < 0 || j >= cols || grid[i][j] == '0') return;

    grid[i][j] = '0';

    dfs(grid, i - 1, j, rows, cols);
    dfs(grid, i + 1, j, rows, cols); 
    dfs(grid, i, j - 1, rows, cols); 
    dfs(grid, i, j + 1, rows, cols); 
}

int numIslands(char** grid, int gridSize, int* gridColSize)
 {
    if (!grid || gridSize == 0 || !gridColSize) return 0;

    int count = 0;
    for (int i = 0; i < gridSize; ++i) {
        for (int j = 0; j < gridColSize[i]; ++j) {
            if (grid[i][j] == '1') {
                count++;
                dfs(grid, i, j, gridSize, gridColSize[i]);
            }
        }
    }
    return count;
}


int main() 
{
    char* grid[] = {
        strdup("11110"),
        strdup("11010"),
        strdup("11000"),
        strdup("00001")
    };

    int rows = 4;
    int cols = 5;
    int gridColSize[] = {cols, cols, cols, cols};

    int result = numIslands(grid, rows, gridColSize);
    printf("Number of islands: %d\n", result);

    // Free memory
    for (int i = 0; i < rows; ++i)
        free(grid[i]);

    return 0;
}
